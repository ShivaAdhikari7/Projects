function e(e,n,s,i){Object.defineProperty(e,n,{get:s,set:i,enumerable:!0,configurable:!0})}function n(e){return e&&e.__esModule?e.default:e}var s="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},i={},r={},c=s.parcelRequiref577;null==c&&((c=function(e){if(e in i)return i[e].exports;if(e in r){var n=r[e];delete r[e];var s={id:e,exports:{}};return i[e]=s,n.call(s.exports,s,s.exports),s.exports}var c=new Error("Cannot find module '"+e+"'");throw c.code="MODULE_NOT_FOUND",c}).register=function(e,n){r[e]=n},s.parcelRequiref577=c),c.register("27Lyk",(function(n,s){var i,r;e(n.exports,"register",(()=>i),(e=>i=e)),e(n.exports,"resolve",(()=>r),(e=>r=e));var c={};i=function(e){for(var n=Object.keys(e),s=0;s<n.length;s++)c[n[s]]=e[n[s]]},r=function(e){var n=c[e];if(null==n)throw new Error("Could not resolve bundle with id "+e);return n}})),c("27Lyk").register(JSON.parse('{"f9fpV":"index.19b76b8c.js","hfd23":"icons.c14567a0.svg"}'));const t=async e=>{try{const n=await fetch(e);return await n.json()}catch(e){throw e}},a={recipe:{},search:{query:"",results:[],page:1,resultPerPage:10}},o=async e=>{const n=await t(`https://forkify-api.herokuapp.com/api/v2/recipes/${e}`),{recipe:s}=n.data;console.log(s),a.recipe={id:s.id,image:s.image_url,ingredients:s.ingredients,publisher:s.publisher,servings:s.servings,sourceUrl:s.source_url,title:s.title,cookingTime:s.cooking_time},console.log(a.recipe)};var l;l=new URL(c("27Lyk").resolve("hfd23"),import.meta.url).toString(),console.log(n(l));var d=new class{_parentElement=document.querySelector(".recipe");_errorMessage="No data can be found";_successMessage="Successfully get the data";_data;_render(e){this._data=e,console.log(this._data);const n=this._generateMarkup();this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",n)}_loadSpinner(){const e=` <div class="spinner">\n                        <svg>\n                        <use href="${n(l)}#icon-loader"></use>\n                        </svg>\n                    </div>\n    \n`;this._parentElement.insertAdjacentHTML("afterbegin",e)}_renderError(e=this._errorMessage){const s=` <div class="error">\n                        <div>\n                        <svg>\n                            <use href="${n(l)}#icon-alert-triangle"></use>\n                        </svg>\n                        </div>\n                        <p>${e}</p>\n                    </div>`;this._parentElement.insertAdjacentHTML("afterbegin",s)}_renderSuccess(e=this._successMessage){const s=`<div class="message">\n                        <div>\n                            <svg>\n                            <use href="${n(l)}#icon-smile"></use>\n                            </svg>\n                        </div>\n                        <p>${e}</p>\n                    </div>`;this._parentElement.insertAdjacentHTML("afterbegin",s)}_clear(){this._parentElement.innerHTML=""}_generateMarkup(){return`     <figure class="recipe__fig">\n                    <img src="${this._data.image}" alt="Tomato" class="recipe__img" />\n                    <h1 class="recipe__title">\n                        <span>${this._data.title}</span>\n                    </h1>\n                    </figure>\n\n                    <div class="recipe__details">\n                    <div class="recipe__info">\n                        <svg class="recipe__info-icon">\n                        <use href="src/img/icons#icon-clock"></use>\n                        </svg>\n                        <span class="recipe__info-data recipe__info-data--minutes">${this._data.cookingTime}</span>\n                        <span class="recipe__info-text">minutes</span>\n                    </div>\n                    <div class="recipe__info">\n                        <svg class="recipe__info-icon">\n                        <use href="src/img/icons#icon-users"></use>\n                        </svg>\n                        <span class="recipe__info-data recipe__info-data--people">${this._data.servings}</span>\n                        <span class="recipe__info-text">servings</span>\n\n                        <div class="recipe__info-buttons">\n                        <button class="btn--tiny btn--increase-servings">\n                            <svg>\n                            <use href="src/img/icons#icon-minus-circle"></use>\n                            </svg>\n                        </button>\n                        <button class="btn--tiny btn--increase-servings">\n                            <svg>\n                            <use href="src/img/icons#icon-plus-circle"></use>\n                            </svg>\n                        </button>\n                        </div>\n                    </div>\n\n                    <div class="recipe__user-generated">\n                        <svg>\n                        <use href="src/img/icons#icon-user"></use>\n                        </svg>\n                    </div>\n                    <button class="btn--round">\n                        <svg class="">\n                        <use href="src/img/icons#icon-bookmark-fill"></use>\n                        </svg>\n                    </button>\n                    </div>\n\n                    <div class="recipe__ingredients">\n                    <h2 class="heading--2">Recipe ingredients</h2>\n                    <ul class="recipe__ingredient-list">\n                        <li class="recipe__ingredient">\n                        <svg class="recipe__icon">\n                            <use href="src/img/icons#icon-check"></use>\n                        </svg>\n                        <div class="recipe__quantity">1000</div>\n                        <div class="recipe__description">\n                            <span class="recipe__unit">g</span>\n                            pasta\n                        </div>\n                        </li>\n\n                        <li class="recipe__ingredient">\n                        <svg class="recipe__icon">\n                            <use href="src/img/icons#icon-check"></use>\n                        </svg>\n                        <div class="recipe__quantity">0.5</div>\n                        <div class="recipe__description">\n                            <span class="recipe__unit">cup</span>\n                            ricotta cheese\n                        </div>\n                        </li>\n                    </ul>\n                    </div>\n\n                    <div class="recipe__directions">\n                    <h2 class="heading--2">How to cook it</h2>\n                    <p class="recipe__directions-text">\n                        This recipe was carefully designed and tested by\n                        <span class="recipe__publisher">${this._data.publisher}</span>. Please check out\n                        directions at their website.\n                    </p>\n                    <a\n                        class="btn--small recipe__btn"\n                        href="${this._data.sourceUrl}"\n                        target="_blank"\n                    >\n                        <span>Directions</span>\n                        <svg class="search__icon">\n                        <use href="${n(l)}#icon-arrow-right"></use>\n                        </svg>\n                    </a>\n                 </div>\n        `}};!async function(){try{const e=window.location.hash.slice(1);console.log(e),d._loadSpinner(),await o("5ed6604591c37cdc054bc886"),d._render(a.recipe)}catch(e){d._renderError()}}();
//# sourceMappingURL=index.19b76b8c.js.map
